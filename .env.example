# =============================================================================
# Glitchtip AIO 环境配置文件
# =============================================================================
# 复制此文件为 .env 并根据需要修改配置
#
# 使用方法：
# 1. cp .env.example .env
# 2. 编辑 .env 文件，修改需要的配置
# 3. 运行 just deploy 或使用 docker 命令部署

# =============================================================================
# 必需配置 [容器]
# =============================================================================

# Django 密钥（必需）
# 生成命令：openssl rand -hex 32
SECRET_KEY=

# Glitchtip 域名（必需，影响 CSRF_TRUSTED_ORIGINS）
# 开发环境：http://localhost:8000
# 生产环境：https://your-domain.com
GLITCHTIP_DOMAIN=http://localhost:8000

# 邮件服务器配置（必需）
# 格式：smtp://user:password@smtp.example.com:port
# 开发环境：consolemail://（输出到控制台）
# 生产环境：smtp://user:password@smtp.your-domain.com:587
EMAIL_URL=consolemail://

# 默认发件人邮箱（必需）
DEFAULT_FROM_EMAIL=glitchtip@localhost

# =============================================================================
# 数据库配置 [容器]
# =============================================================================

# 数据库连接字符串（可选，默认使用容器内 PostgreSQL）
# 格式：postgres://user:password@host:port/database
DATABASE_URL=

# 数据库密码（可选，当不设置 DATABASE_URL 时使用）
DB_PASSWORD=

# Redis 连接字符串（可选，默认使用容器内 Redis）
# 格式：redis://:password@host:port/database
REDIS_URL=

# Redis 密码（可选，当不设置 REDIS_URL 时使用）
REDIS_PASSWORD=

# =============================================================================
# 定时重启通知配置 [容器]
# =============================================================================

# 飞书群机器人Webhook地址（可选）
# 配置后将定时重启报告发送到飞书群聊
# 获取方式：飞书群 -> 设置 -> 群机器人 -> 添加机器人 -> 获取Webhook地址
# 示例：https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
FEISHU_GROUP_DEVOPS_ROBOT_WEBHOOK_URL=

# =============================================================================
# 应用配置 [容器]
# =============================================================================

# 调试模式（生产环境必须设为 false）
DEBUG=false

# 允许的主机名（用逗号分隔）
ALLOWED_HOSTS=localhost,127.0.0.1

# 是否允许用户注册（默认 true）
ENABLE_USER_REGISTRATION=false

# 是否允许组织创建（默认 false）
ENABLE_ORGANIZATION_CREATION=false

# =============================================================================
# 数据保留配置 [容器]
# =============================================================================

# 事件数据保留天数（默认 90 天）
GLITCHTIP_MAX_EVENT_LIFE_DAYS=90

# 交易事件保留天数（默认等于事件保留天数）
GLITCHTIP_MAX_TRANSACTION_EVENT_LIFE_DAYS=45

# 文件保留天数（默认等于事件保留天数）
GLITCHTIP_MAX_FILE_LIFE_DAYS=180

# =============================================================================
# 部署配置 [部署]
# =============================================================================

# 容器名称
CONTAINER_NAME=glitchtip-aio

# 镜像名称
IMAGE_NAME=glitchtip-aio

# Web 服务端口映射（容器内部固定为 8000）
DEFAULT_PORT=8000

# =============================================================================
# 数据持久化说明 [部署]
# =============================================================================

# 数据库文件存储说明：
# - PostgreSQL 数据目录：/data/postgres（容器内）
# - Redis 数据目录：/data/redis（容器内）
#
# 数据持久化方案：
# 1. 容器内存储（默认）：数据存储在容器内，容器删除后数据会丢失
#    适合：测试、开发环境
#
# 2. Docker Volume：使用 Docker volume 管理数据
#    命令：docker run -v postgres-data:/data/postgres -v redis-data:/data/redis
#    适合：生产环境，数据持久化
#
# 3. 绑定挂载：挂载宿主机目录
#    命令：docker run -v ./data/postgres:/data/postgres -v ./data/redis:/data/redis
#    适合：需要直接访问数据文件的情况
#
# 恢复数据库备份：
# 1. 将备份文件复制到容器：docker cp backup.sql container_name:/tmp/backup.sql
# 2. 进入容器恢复：docker exec -i container_name psql -U postgres -d postgres -f /tmp/backup.sql

# =============================================================================
# 定时重启功能说明 [运维]
# =============================================================================

# 系统内置了智能定时重启功能，具体特性如下：

# 执行时间：
# - 每天 临晨3:01 自动执行
# - 通过 Supervisor cron 任务调度
# - 也可手动执行：just run-scheduled-restart

# 重启策略：
# - 智能健康检查：PostgreSQL、Redis、Django、Celery
# - 条件重启：只有基础服务健康时才重启应用层服务
# - 预防性维护：即使服务正常也执行例行重启
# - 进程跟踪：记录重启前后的进程PID变化

# 监控信息：
# - 系统资源：内存、磁盘、CPU使用率
# - 网络状态：活跃连接数统计
# - 服务状态：各服务健康检查结果
# - 执行耗时：详细的操作计时信息

# 通知功能：
# - 飞书群聊通知（需配置webhook地址）
# - 交互式卡片格式展示
# - 仅在重启时或异常时发送通知
# - 包含完整的执行报告和系统信息

# 日志查看：
# - 容器内日志：/var/log/supervisor/scheduled-restart.log
# - 本地查看：just logs-scheduled-restart
# - 错误日志：just logs-scheduled-restart-errors

# 注意事项：
# - 重启仅影响web(celery)服务，不重启数据库
# - 系统会自动等待服务完全启动后再继续
# - 所有操作都有详细的日志记录和错误处理

