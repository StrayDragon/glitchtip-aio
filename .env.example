# =============================================================================
# Glitchtip AIO 环境配置文件
# =============================================================================
# 复制此文件为 .env 并根据需要修改配置
#
# 使用方法：
# 1. cp .env.example .env
# 2. 编辑 .env 文件，修改需要的配置
# 3. 运行 just deploy 或使用 docker 命令部署
#
# 注意事项：
# - 标记为 [容器] 的变量只在容器内部使用
# - 标记为 [部署] 的变量在部署时使用
# - 生产环境请务必修改默认密码和密钥

# =============================================================================
# 基础配置 [部署]
# =============================================================================

# 容器名称
CONTAINER_NAME=glitchtip-aio

# 镜像名称
IMAGE_NAME=glitchtip-aio

# 数据目录（相对路径或绝对路径）
# 开发环境建议：./data-dev
# 生产环境建议：./data
DATA_DIR=./data

# =============================================================================
# 网络配置 [部署]
# =============================================================================

# Web 服务端口（容器内部固定为 8000，这是外部映射端口）
# 开发环境建议：8004
# 生产环境建议：80 或 443（配合反向代理）
DEFAULT_PORT=8004

# Glitchtip 访问域名（重要：影响 CSRF_TRUSTED_ORIGINS 默认值）
# 开发环境示例：http://localhost:8004
# 生产环境示例：https://your-domain.com
DEFAULT_DOMAIN=http://localhost:8004

# =============================================================================
# Django 安全配置 [容器]
# =============================================================================

# 允许的主机名（用逗号分隔，包含域名和IP地址）
# 开发环境：localhost,127.0.0.1
# 生产环境：localhost,127.0.0.1,your-domain.com
ALLOWED_HOSTS=localhost,127.0.0.1

# CSRF 可信来源（用逗号分隔，包含完整的URL）
# 开发环境：http://localhost:8004
# 生产环境：https://your-domain.com
CSRF_TRUSTED_ORIGINS=http://localhost:8004

# Django 密钥（生产环境请使用强随机密钥）
# 生成命令：openssl rand -hex 32
# 开发环境可以使用简单值，生产环境必须修改
SECRET_KEY=

# 调试模式（生产环境必须设为 false）
# 开发环境：true
# 生产环境：false
DEBUG=false

# =============================================================================
# 用户和组织管理 [容器]
# =============================================================================

# 是否允许用户注册（true/false）
# 开发环境：true（便于测试）
# 生产环境：false（安全考虑）
ENABLE_USER_REGISTRATION=false

# 是否允许组织创建（true/false）
# 开发环境：true（便于测试）
# 生产环境：false（安全考虑）
ENABLE_ORGANIZATION_CREATION=false

# 默认发件人邮箱
# 生产环境需要配置为真实邮箱地址
DEFAULT_FROM_EMAIL=glitchtip@localhost

# =============================================================================
# 数据持久化配置 [部署]
# =============================================================================

# 是否启用数据持久化
# true: 数据保存在宿主机，容器重启后数据不丢失
# false: 数据保存在容器内，容器删除后数据丢失
# 开发环境：false（可选）
# 生产环境：true（推荐）
PERSIST_DATA=false

# =============================================================================
# 端口暴露配置 [部署]
# =============================================================================

# 是否暴露 Web 端口到宿主机
EXPOSE_WEB_PORT=true

# 是否暴露数据库端口（生产环境强烈建议 false）
# 开发环境：true（便于调试）
# 生产环境：false（安全考虑）
EXPOSE_DB_PORT=false

# 是否暴露 Redis 端口（生产环境强烈建议 false）
# 开发环境：true（便于调试）
# 生产环境：false（安全考虑）
EXPOSE_REDIS_PORT=false

# =============================================================================
# 安全配置 [容器]
# =============================================================================

# 数据库密码（生产环境请务必修改）
# 如果不设置，系统会自动生成随机密码
# 开发环境：dev-password
# 生产环境：强随机密码
DB_PASSWORD=

# Redis 密码（可选，生产环境建议设置）
# 开发环境：dev-password
# 生产环境：强随机密码
REDIS_PASSWORD=

# =============================================================================
# 邮件配置（可选）[容器]
# =============================================================================

# 邮件服务器配置
# 格式：smtp://user:password@smtp.example.com:port
# 开发环境：consolemail://（输出到控制台）
# 生产环境：smtp://user:password@smtp.your-domain.com:587
EMAIL_URL=consolemail://

# =============================================================================
# 性能配置 [容器]
# =============================================================================

# 数据库连接池（默认 false 避免连接问题）
DATABASE_POOL=false

# =============================================================================
# 高级配置（可选）[容器]
# =============================================================================

# CORS 配置（跨域资源共享）
# 允许的前端域名，用逗号分隔
CORS_ALLOWED_ORIGINS=

# API 访问限制
API_RATE_LIMIT=1000/hour

# 文件上传配置
MAX_UPLOAD_SIZE=10485760  # 10MB

